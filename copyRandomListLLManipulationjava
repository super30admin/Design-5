/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null) return null;
        Node curr = head;
        while(curr!=null) {
            Node copy = new Node(curr.val);
            copy.next = curr.next;
            curr.next = copy;
            curr = curr.next.next;
        }
        curr = head;
        while(curr!=null) {
            if(curr.random!=null){
                curr.next.random = curr.random.next;
            }
            curr = curr.next.next;            
        }
        curr = head;
        Node copyHead = head.next;
        Node currCopy = head.next;
        while(curr!=null) {
            curr.next = curr.next.next;
            if(currCopy.next!=null){
                currCopy.next = currCopy.next.next;
            }
            curr = curr.next;
            currCopy = currCopy.next;
        }
        
        return copyHead;
    }
}