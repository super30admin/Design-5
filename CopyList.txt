/*
Time Complexity - O(n)
Space Complexity - O(1)
*/

class Solution {
    public Node copyRandomList(Node head) {
        if (head == null) return null;
        Node curr = head;

        while (curr != null) {
            Node newNode = new Node(curr.val);
            newNode.next = curr.next;
            curr.next = newNode;
            curr = curr.next.next;
        }

        curr = head;
        Node newCurr = head.next;
        while (curr != null) {
            if (curr.random != null) {
                newCurr.random = curr.random.next;
            }
            curr = curr.next.next;
            if (newCurr.next != null) {
                newCurr = newCurr.next.next;
            }
        }

        // final split

        curr = head;
        newCurr = head.next;
        Node newhead = head.next;
        while (curr != null) {
            curr.next = curr.next.next;
            if (newCurr.next != null) {
                newCurr.next = newCurr.next.next;
            }
            curr = curr.next;
            newCurr = newCurr.next;
        }
        return newhead;
    }
}
